---
import Layout from '@/src/layouts/Layout.astro';

import Hero from '@/src/components/Hero.astro';
import Icon from '@/src/components/Icon.astro';
import Pill from '@/src/components/Pill.astro';
import { loadCollection } from '@/src/utils/loadData';
import { render } from 'astro:content';

// This is a dynamic route that generates a page for every Markdown file in src/content/
export async function getStaticPaths() {
	const pages = await loadCollection('en');
	//console.log(pages);

	const paths = pages.map((page) => {
		console.log(page);
		return {
			params: { slug: page.id || undefined },
			props: page,
		};
	});
	//console.log(paths);
	return paths;
}

console.log('Test');
const { slug } = Astro.params;
console.log(Astro.props);
const page = Astro.props;
console.log(page);
const { Content } = await render(page);
---

<Layout
	title={page.data.title}
	description={page.data.description}
>
	<div class='stack gap-20'>
		<div class='stack gap-15'>
			<header>
				<div class='wrapper stack gap-2'>
					<a
						class='back-link'
						href='/projects/'
					>
						<Icon icon='arrow-left' />
						Projects
					</a>
					<Hero
						title={page.data.title.split('|')[0].trim()}
						align='start'
					>
						<div class='details'>
							<div class='tags'>
								{page.data.tags.map((tag) => <Pill>{tag}</Pill>)}
							</div>
						</div>
					</Hero>
				</div>
			</header>
			<main
				class='wrapper'
				transition:animate='slide'
			>
				<div class='stack gap-10 content'>
					{
						page.data.img && (
							<img
								src={page.data.img}
								alt={page.data.img_alt || ''}
							/>
						)
					}
					<div class='content'>
						<Content />
					</div>
				</div>
			</main>
		</div>
	</div>
</Layout>

<style>
	header {
		padding-bottom: 2.5rem;
		border-bottom: 1px solid var(--gray-800);
	}

	.back-link {
		display: none;
	}

	.details {
		display: flex;
		flex-direction: column;
		padding: 0.5rem;
		gap: 1.5rem;
		justify-content: space-between;
		align-items: center;
	}

	.tags {
		display: flex;
		gap: 0.5rem;
	}

	.descrition {
		font-size: var(--text-lg);
		max-width: 54ch;
	}

	.content {
		max-width: 100ch;
		margin-inline: auto;
	}

	.content > :global(* + *) {
		margin-top: 1rem;
	}

	.content: global(h1);
	.content: global(h2);
	.content: global(h3);
	.content: global(h4);
	.content: global(h5) {
		margin: 1.5rem 0;
	}

	.content :global(img) {
		align-self: center;
		max-width: 65ch;
		max-height: 100ch;
		border-radius: 1.5rem;
		box-shadow: var(--shadow-sm);
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
	}

	.content :global(blockquote) {
		font-size: var(--text-lg);
		font-family: var(--font-brand);
		font-weight: 600;
		line-height: 1.1;
		padding-inline-start: 1.5rem;
		border-inline-start: 0.25rem solid var(--accent-dark);
		color: var(--gray-0);
	}

	.back-link,
	.content :global(a) {
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
	}

	.content :global(a:hover),
	.content :global(a:focus) {
		text-decoration-color: currentColor;
	}
</style>
