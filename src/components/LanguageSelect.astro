---
import { languages } from '@/src/i18n/ui';
import {
	getLangFromUrl,
	useTranslatedPath,
	getBaseUrl,
} from '@/src/i18n/utils';

import getFlagEmoji from '@/src/utils/getLanguageFlag';

const locale = getLangFromUrl(Astro.url);
const baseUrl = getBaseUrl(Astro.url);
console.log(baseUrl);
const translatePath = useTranslatedPath(locale);
---

<language-select>
	<select
		name='language-select'
		id='language-select'
	>
		{
			Object.entries(languages).map(([lang, label]) =>
				locale === lang ?
					<option
						value={translatePath(baseUrl, lang)}
						selected
					>
						{getFlagEmoji(lang) + ' ' + label}
					</option>
				:	<option value={translatePath(baseUrl, lang)}>
						{getFlagEmoji(lang) + ' ' + label}
					</option>
			)
		}
	</select>
</language-select>

<style>
	select {
		background-color: transparent;
		border: none;
		color: var(--gray-100);
		font-size: var(--text-base);
	}
</style>

<script>
	import { navigate } from 'astro:transitions/client';

	class LanguageSelect extends HTMLElement {
		constructor() {
			super();

			const select = this.querySelector('select')!;

			// Change language when a new value is selected
			select.addEventListener('change', this.setLanguage);
		}

		// Set the language to current value
		setLanguage(event) {
			const selectedLanguage = event.target.value;
			if (selectedLanguage) {
				navigate(selectedLanguage);
			}
		}
	}
	customElements.define('language-select', LanguageSelect);
</script>
