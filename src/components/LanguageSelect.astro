---
import { languages } from '@/src/i18n/ui';
import getFlagEmoji from '@/src/utils/getLanguageFlag';
---

<language-select>
	<select
		name='language-select'
		id='language-select'
	>
		{
			Object.entries(languages).map(([lang, label]) => (
				<option value={lang}>{getFlagEmoji(lang) + ' ' + label}</option>
			))
		}
	</select>
</language-select>

<style>
	select {
		background-color: transparent;
		border: none;
		color: var(--gray-100);
		font-size: var(--text-base);
	}
</style>

<script>
	import { navigate } from 'astro:transitions/client';
	import {
		useTranslatedPath,
		getBaseUrl,
		saveLanguage,
		getLanguagePreference,
	} from '@/src/i18n/utils';

	class LanguageSelect extends HTMLElement {
		constructor() {
			super();
			const select = this.querySelector('select')!;

			const selectValue = getLanguagePreference();
			select.value = selectValue;

			// Change language when a new value is selected
			select.addEventListener('change', this.setLanguage);
		}

		// Set the language to current value
		setLanguage(event) {
			const selectedLanguage = event.target.value;
			//console.log('SelectedLanguage: ' + selectedLanguage);
			if (selectedLanguage) {
				const currentLanguage = getLanguagePreference();
				console.log(currentLanguage);
				if (currentLanguage && selectedLanguage != currentLanguage) {
					const basePath = getBaseUrl(window.location.pathname);
					const translatePath = useTranslatedPath(selectedLanguage);
					saveLanguage(selectedLanguage);
					navigate(translatePath(basePath));
				}
			}
		}
	}
	customElements.define('language-select', LanguageSelect);
</script>
