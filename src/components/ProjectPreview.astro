---
import type { CollectionEntry } from 'astro:content';
import { getLangFromUrl, useTranslatedPath } from '@/src/i18n/utils';

const locale = getLangFromUrl(Astro.url);
const translatePath = useTranslatedPath(locale);

let projectCollection = 'projectsEn';
switch (locale) {
	case 'en':
		projectCollection = 'projectsEn';
		break;
	case 'pt':
		projectCollection = 'projectsPt';
		break;
}

interface Props {
	project: CollectionEntry<'projectsEn'>;
}

const { data, id } = Astro.props.project;

let projectUrl = id.split('/').pop();
if (projectUrl?.endsWith('.md')) projectUrl = projectUrl.replaceAll('.md', '');
//console.log(id);
//console.log(projectUrl);
---

<a
	class='card'
	href={translatePath(`/projects/${projectUrl}`, locale)}
>
	<span class='title'>{data.title.split('|')[0].trim()}</span>
	<img
		src={data.img}
		alt={data.img_alt || ''}
		loading='lazy'
		decoding='async'
	/>
</a>

<style>
	.card {
		display: grid;
		grid-template: auto 1fr / auto 1fr;
		height: 11rem;
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
		border-radius: 0.75rem;
		overflow: hidden;
		box-shadow: var(--shadow-sm);
		text-decoration: none;
		font-family: var(--font-brand);
		font-size: var(--text-lg);
		font-weight: 500;
		transition: box-shadow var(--theme-transition);
	}

	.card:hover {
		box-shadow: var(--shadow-md);
	}

	.title {
		grid-area: 1 / 1 / 2 / 2;
		z-index: 1;
		margin: 0.5rem;
		padding: 0.5rem 1rem;
		background: var(--gray-999);
		color: white;
		border-radius: 0.375rem;
		mix-blend-mode: multiply;
	}

	img {
		grid-area: 1 / 1 / 3 / 3;
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	@media (min-width: 50em) {
		.card {
			height: 22rem;
			border-radius: 1.5rem;
		}

		.title {
			border-radius: 0.9375rem;
		}
	}
</style>
